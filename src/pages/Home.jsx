import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import WeekCalendar from '../components/WeekCalendar';
import MoodPicker from '../components/MoodPicker';
import StepCounter from '../components/StepCounter';
import './Home.css';

const weekDayNames = ['–ø–Ω', '–≤—Ç', '—Å—Ä', '—á—Ç', '–ø—Ç', '—Å–±', '–≤—Å'];

function getStartOfWeek(date) {
  // –ü–æ–ª—É—á–∏—Ç—å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏
  const d = new Date(date);
  const day = d.getDay();
  const diff = (day === 0 ? -6 : 1) - day; // –µ—Å–ª–∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, —Ç–æ -6, –∏–Ω–∞—á–µ 1-day
  d.setDate(d.getDate() + diff);
  d.setHours(0,0,0,0);
  return d;
}

function getWeekDates(startDate) {
  // –ü–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ –¥–∞—Ç –Ω–µ–¥–µ–ª–∏, –Ω–∞—á–∏–Ω–∞—è —Å startDate (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫)
  const week = [];
  for (let i = 0; i < 7; i++) {
    const d = new Date(startDate);
    d.setDate(startDate.getDate() + i);
    week.push(d);
  }
  return week;
}

function isSameDay(d1, d2) {
  return d1.getFullYear() === d2.getFullYear() &&
    d1.getMonth() === d2.getMonth() &&
    d1.getDate() === d2.getDate();
}

function Home() {
  const today = new Date();
  const [selectedDate, setSelectedDate] = useState(today);
  const [mood, setMood] = useState(null); // null - –Ω–µ –≤—ã–±—Ä–∞–Ω–æ
  const [steps, setSteps] = useState(0);
  const navigate = useNavigate();

  return (
    <div className="home-container">
      <header className="home-header">
        <span className="greeting">–ü—Ä–∏–≤–µ—Ç!</span>
        <div className="header-icons">
          <span className="header-icon" />
          <span className="header-icon" />
        </div>
      </header>

      <WeekCalendar value={selectedDate} onChange={setSelectedDate} />

      <div className="main-image-block">
        –≤ —ç—Ç–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ<br/>–∫–∞–∫–∞—è-—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∞ /<br/>—Å—Ç–∏–∫–µ—Ä/–∞–Ω–∏–º–∞—Ü–∏—è
      </div>

      <div className="notes-block">
        –ø–ª–∞—à–∫–∞ –Ω–∞<br/>–∑–∞–º–µ—Ç–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
      </div>

      <div className="stats-block">
        <div className="stat-item">
          <StepCounter value={steps} onChange={setSteps} />
          <div className="stat-label">–∫–æ–ª-–≤–æ<br/>—à–∞–≥–æ–≤</div>
        </div>
        <div className="stat-item mood-item">
          <MoodPicker value={mood} onChange={setMood} />
          <div className="stat-label">–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ<br/>(–º–æ—Å—å–∫–∞)</div>
        </div>
        <div className="stat-item">
          <div className="stat-circle" />
          <div className="stat-label">–∫–æ–ª-–≤–æ<br/>–≤–æ–¥—ã</div>
        </div>
      </div>

      <footer className="home-footer">
        <button className="footer-icon" onClick={() => navigate('/')}>üè†</button>
        <button className="footer-icon" onClick={() => navigate('/page2')}>üìÑ</button>
      </footer>
    </div>
  );
}

export default Home;
